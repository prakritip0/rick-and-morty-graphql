{"ast":null,"code":"var _jsxFileName = \"/Users/kriti/Desktop/graphql-rick-and-morty/src/pages/Characater.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useCharacter } from '../hooks/useCharacter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Characater() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useCharacter(id);\n  console.log(data, loading, error);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Something went wrong\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 23\n  }, this);\n  if (!data.character) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"cant find character\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.character.image,\n      width: 750,\n      height: 750,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: data.character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.character.gender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-episode\",\n        children: data.character.episode.map(episode => {\n          // console.log('ep',episode);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [episode.name, \" - \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: episode.episode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(Characater, \"tswQSdGadLvrRjx19dn+BAfOu5I=\", false, function () {\n  return [useParams, useCharacter];\n});\n_c = Characater;\nvar _c;\n$RefreshReg$(_c, \"Characater\");","map":{"version":3,"names":["React","useParams","useCharacter","jsxDEV","_jsxDEV","Characater","_s","id","loading","error","data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","character","className","src","image","width","height","alt","name","gender","episode","map","_c","$RefreshReg$"],"sources":["/Users/kriti/Desktop/graphql-rick-and-morty/src/pages/Characater.js"],"sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useCharacter } from '../hooks/useCharacter'\n\nexport default function Characater() {\n    const { id } = useParams();\n    const { loading, error, data } = useCharacter(id);\n    console.log(data, loading, error);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>Something went wrong</p>\n    if(!data.character) return <p>cant find character</p>\n\n    return (\n        <div className='character'>\n            <img src={data.character.image} width={750} height={750} alt='' />\n            <div className='character-content'>\n                <h1>{data.character.name}</h1>\n                <p>{data.character.gender}</p>\n                <div className='character-episode'>\n                    {data.character.episode.map(episode => {\n                        // console.log('ep',episode);\n                        return <div>\n                            {episode.name} - <b>{episode.episode}</b>\n                        </div>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,YAAY,QAAQ,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM;IAAEO,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGR,YAAY,CAACK,EAAE,CAAC;EACjDI,OAAO,CAACC,GAAG,CAACF,IAAI,EAAEF,OAAO,EAAEC,KAAK,CAAC;EACjC,IAAID,OAAO,EAAE,oBAAOJ,OAAA;IAAAS,QAAA,EAAG;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACtC,IAAIR,KAAK,EAAE,oBAAOL,OAAA;IAAAS,QAAA,EAAG;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC7C,IAAG,CAACP,IAAI,CAACQ,SAAS,EAAE,oBAAOd,OAAA;IAAAS,QAAA,EAAG;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAErD,oBACIb,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAN,QAAA,gBACtBT,OAAA;MAAKgB,GAAG,EAAEV,IAAI,CAACQ,SAAS,CAACG,KAAM;MAACC,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAACC,GAAG,EAAC;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEb,OAAA;MAAKe,SAAS,EAAC,mBAAmB;MAAAN,QAAA,gBAC9BT,OAAA;QAAAS,QAAA,EAAKH,IAAI,CAACQ,SAAS,CAACO;MAAI;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9Bb,OAAA;QAAAS,QAAA,EAAIH,IAAI,CAACQ,SAAS,CAACQ;MAAM;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9Bb,OAAA;QAAKe,SAAS,EAAC,mBAAmB;QAAAN,QAAA,EAC7BH,IAAI,CAACQ,SAAS,CAACS,OAAO,CAACC,GAAG,CAACD,OAAO,IAAI;UACnC;UACA,oBAAOvB,OAAA;YAAAS,QAAA,GACFc,OAAO,CAACF,IAAI,EAAC,KAAG,eAAArB,OAAA;cAAAS,QAAA,EAAIc,OAAO,CAACA;YAAO;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC;QACV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACX,EAAA,CAzBuBD,UAAU;EAAA,QACfJ,SAAS,EACSC,YAAY;AAAA;AAAA2B,EAAA,GAFzBxB,UAAU;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}