{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery, gql } from '@apollo/client';\nconst GET_CHARACTERS = gql`\n    query getCharacters {\n        characters {\n            results {\n                id\n                name\n                image\n                episode{\n                    \n                }\n            }\n            \n        }\n    }\n`;\nexport const useCharacters = () => {\n  _s();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_CHARACTERS);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n_s(useCharacters, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","gql","GET_CHARACTERS","useCharacters","_s","data","loading","error"],"sources":["/Users/kriti/Desktop/graphql-rick-and-morty/src/hooks/useCharacters.js"],"sourcesContent":["import { useQuery, gql } from '@apollo/client'\n\nconst GET_CHARACTERS = gql`\n    query getCharacters {\n        characters {\n            results {\n                id\n                name\n                image\n                episode{\n                    \n                }\n            }\n            \n        }\n    }\n`;\nexport const useCharacters = () => {\n    const { data, loading, error } = useQuery(GET_CHARACTERS);\n    return { data, loading, error }\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAE9C,MAAMC,cAAc,GAAGD,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAME,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGP,QAAQ,CAACE,cAAc,CAAC;EACzD,OAAO;IAAEG,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC;AACnC,CAAC;AAAAH,EAAA,CAHYD,aAAa;EAAA,QACWH,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}