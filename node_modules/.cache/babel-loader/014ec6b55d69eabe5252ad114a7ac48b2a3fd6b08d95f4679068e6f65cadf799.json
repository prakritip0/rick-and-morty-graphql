{"ast":null,"code":"var _jsxFileName = \"/Users/kriti/Desktop/graphql-rick-and-morty/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport { gql, useLazyQuery } from '@apollo/client';\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_CHARACTER_LOCATIONS = gql`\nquery GetCharacterLocations($name: string!){\n    characters(filter:{\n    name:$name\n  }){\n    results{\n      location{\n        name\n      }\n    }\n  }\n}`;\nexport default function Search() {\n  _s();\n  const [name, setName] = useState('');\n  connt[(getLocations, {\n    loading,\n    error,\n    data\n  })] = useLazyQuery(GET_CHARACTER_LOCATIONS, {\n    variables: {\n      name\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"GDuYHdBQAP2mF1k3jPRUK4pzHE0=\", false, function () {\n  return [useLazyQuery];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["gql","useLazyQuery","React","useState","jsxDEV","_jsxDEV","GET_CHARACTER_LOCATIONS","Search","_s","name","setName","connt","getLocations","loading","error","data","variables","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kriti/Desktop/graphql-rick-and-morty/src/pages/Search.js"],"sourcesContent":["import { gql, useLazyQuery } from '@apollo/client'\nimport React from 'react'\nimport { useState } from 'react'\n\nconst GET_CHARACTER_LOCATIONS = gql`\nquery GetCharacterLocations($name: string!){\n    characters(filter:{\n    name:$name\n  }){\n    results{\n      location{\n        name\n      }\n    }\n  }\n}`\n\nexport default function Search() {\n\n    const [name, setName] = useState('')\n    connt [getLocations,{loading, error, data}]=useLazyQuery(GET_CHARACTER_LOCATIONS,{\n        variables:{\n            name\n        }\n    })\n    return (\n        <div>\n            <input value={name} onChange={(e) => setName(e.target.value)} />\n            <button>Search</button>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,YAAY,QAAQ,gBAAgB;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,uBAAuB,GAAGN,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,eAAe,SAASO,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAE7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpCQ,KAAK,EAAEC,YAAY,EAAC;IAACC,OAAO;IAAEC,KAAK;IAAEC;EAAI,CAAC,EAAC,GAACd,YAAY,CAACK,uBAAuB,EAAC;IAC7EU,SAAS,EAAC;MACNP;IACJ;EACJ,CAAC,CAAC;EACF,oBACIJ,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAOa,KAAK,EAAET,IAAK;MAACU,QAAQ,EAAGC,CAAC,IAAKV,OAAO,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEpB,OAAA;MAAAY,QAAA,EAAQ;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd;AAACjB,EAAA,CAduBD,MAAM;EAAA,QAGkBN,YAAY;AAAA;AAAAyB,EAAA,GAHpCnB,MAAM;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}