{"ast":null,"code":"var _jsxFileName = \"/Users/kriti/Desktop/graphql-rick-and-morty/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport { gql, useLazyQuery } from '@apollo/client';\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_CHARACTER_LOCATIONS = gql`\nquery GetCharacterLocations($name: String!){\n    characters(filter:{\n    name:$name\n  }){\n    results{\n      location{\n        name\n      }\n    }\n  }\n}`;\nexport default function Search() {\n  _s();\n  const [name, setName] = useState('');\n  const [getLocations, {\n    loading,\n    error,\n    data,\n    called\n  }] = useLazyQuery(GET_CHARACTER_LOCATIONS, {\n    variables: {\n      name\n    }\n  });\n  // console.log(called, loading, error, data, name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getLocations(),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"something went wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }, this), data && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.characters.results.map(character => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: character.location.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"SNcYt25Kunjr6c+uyAWUPINKUhE=\", false, function () {\n  return [useLazyQuery];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["gql","useLazyQuery","React","useState","jsxDEV","_jsxDEV","GET_CHARACTER_LOCATIONS","Search","_s","name","setName","getLocations","loading","error","data","called","variables","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","characters","results","map","character","location","_c","$RefreshReg$"],"sources":["/Users/kriti/Desktop/graphql-rick-and-morty/src/pages/Search.js"],"sourcesContent":["import { gql, useLazyQuery } from '@apollo/client'\nimport React from 'react'\nimport { useState } from 'react'\n\nconst GET_CHARACTER_LOCATIONS = gql`\nquery GetCharacterLocations($name: String!){\n    characters(filter:{\n    name:$name\n  }){\n    results{\n      location{\n        name\n      }\n    }\n  }\n}`\n\nexport default function Search() {\n\n    const [name, setName] = useState('')\n    const [getLocations, { loading, error, data, called }] = useLazyQuery(GET_CHARACTER_LOCATIONS, {\n        variables: {\n            name\n        }\n    })\n    // console.log(called, loading, error, data, name);\n    return (\n        <div>\n            <input value={name} onChange={(e) => setName(e.target.value)} />\n            <button onClick={() => getLocations()}>Search</button>\n            {loading && <p>Loading....</p>}\n            {error && <p>something went wrong</p>}\n            {data && <ul>{data.characters.results.map(character=>{\n                return <li>{character.location.name}</li>\n            })}</ul>}\n        </div>\n    )\n}\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,YAAY,QAAQ,gBAAgB;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,uBAAuB,GAAGN,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,eAAe,SAASO,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAE7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,YAAY,EAAE;IAAEC,OAAO;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAO,CAAC,CAAC,GAAGd,YAAY,CAACK,uBAAuB,EAAE;IAC3FU,SAAS,EAAE;MACPP;IACJ;EACJ,CAAC,CAAC;EACF;EACA,oBACIJ,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAOa,KAAK,EAAET,IAAK;MAACU,QAAQ,EAAGC,CAAC,IAAKV,OAAO,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEpB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAAC,CAAE;MAAAM,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrDb,OAAO,iBAAIP,OAAA;MAAAY,QAAA,EAAG;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC7BZ,KAAK,iBAAIR,OAAA;MAAAY,QAAA,EAAG;IAAoB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACpCX,IAAI,iBAAIT,OAAA;MAAAY,QAAA,EAAKH,IAAI,CAACa,UAAU,CAACC,OAAO,CAACC,GAAG,CAACC,SAAS,IAAE;QACjD,oBAAOzB,OAAA;UAAAY,QAAA,EAAKa,SAAS,CAACC,QAAQ,CAACtB;QAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAC7C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACjB,EAAA,CApBuBD,MAAM;EAAA,QAG+BN,YAAY;AAAA;AAAA+B,EAAA,GAHjDzB,MAAM;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}