{"ast":null,"code":"var _jsxFileName = \"/Users/kriti/Desktop/graphql-rick-and-morty/src/pages/CharactersList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_CHARACTERS = gql`\n    query {\n        # characters {\n        #     results {\n        #         id\n        #         name\n        #         image\n        #     }\n        # }\n\n`;\nexport default function CharactersList() {\n  _s();\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(GET_CHARACTERS);\n  const characters = data;\n  console.log('char', characters, loading, error);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Something went wrong.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charactersList\",\n    children: data.characters.results.map(character => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: character.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(CharactersList, \"MadqETWYtkFh3dDWW9IjxDLlwQw=\", false, function () {\n  return [useQuery];\n});\n_c = CharactersList;\nvar _c;\n$RefreshReg$(_c, \"CharactersList\");","map":{"version":3,"names":["React","useQuery","gql","jsxDEV","_jsxDEV","GET_CHARACTERS","CharactersList","_s","error","loading","data","characters","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","results","map","character","src","image","alt","name","_c","$RefreshReg$"],"sources":["/Users/kriti/Desktop/graphql-rick-and-morty/src/pages/CharactersList.js"],"sourcesContent":["import React from 'react'\nimport { useQuery, gql } from '@apollo/client'\n\nconst GET_CHARACTERS = gql`\n    query {\n        # characters {\n        #     results {\n        #         id\n        #         name\n        #         image\n        #     }\n        # }\n\n`;\n\nexport default function CharactersList() {\n    const { error, loading, data } = useQuery(GET_CHARACTERS);\n    const characters = data;\n    console.log('char', characters, loading, error);\n    if (loading) {\n        return <p>Loading.....</p>\n    }\n    if (error) {\n        return <p>Something went wrong.....</p>\n    }\n\n    return (\n        <div className='charactersList'>\n            {data.characters.results.map((character) => {\n                return <div>\n                    <img src={character.image} alt=\"\" />\n                    <h2>{character.name}</h2>\n                </div>\n            })}\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,cAAc,GAAGH,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASI,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAACI,cAAc,CAAC;EACzD,MAAMM,UAAU,GAAGD,IAAI;EACvBE,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,UAAU,EAAEF,OAAO,EAAED,KAAK,CAAC;EAC/C,IAAIC,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAU,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC9B;EACA,IAAIV,KAAK,EAAE;IACP,oBAAOJ,OAAA;MAAAU,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC3C;EAEA,oBACId,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAL,QAAA,EAC1BJ,IAAI,CAACC,UAAU,CAACS,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;MACxC,oBAAOlB,OAAA;QAAAU,QAAA,gBACHV,OAAA;UAAKmB,GAAG,EAAED,SAAS,CAACE,KAAM;UAACC,GAAG,EAAC;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpCd,OAAA;UAAAU,QAAA,EAAKQ,SAAS,CAACI;QAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IACV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACX,EAAA,CArBuBD,cAAc;EAAA,QACDL,QAAQ;AAAA;AAAA0B,EAAA,GADrBrB,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}